Говори по-русски.

Девелоперская среда: исключительно Android, Termux, root права; никаких ПК (считай, что челлендж - написать всё на мобиле).

Юзерская среда: обычный Андроид 9+.

Отступы - 2 пробела, форматирование кода компактное (под мобильник 6").

Использовать верблюжью нотацию, если нет иной культуры в данном вопросе.

Проект: https://github.com/Luwerdwighime/ytgui

Окружение: https://github.com/Luwerdwighime/ytgui-env
Окружение собрано через pip, все зависимости yt-dlp установлены. Окружение у клиента обновляется через pull, сам клиент его не админит

Сборка на ГитХабе, на рабочем телефоне только код, ключи, конфиги, картинки.

Картинки я не рисую - бэкэндер, только стандартные или открытые источники.

Дизайн повозможности системный, в т.ч. картинки.

Название: org.nazarik.ytgui.

Полные пути в названиях файлов для комфортного копипаста.

Код пиши блоками, блоки комментируй, старайся сушить код и дважды не делать одну логическую операцию в разных файлах

Код полностью открытый, ключ лежит для галочки, про безопасность не паримся, кроме условий со стороны вендоров.

Все сисадминские операции (права доступа, настройки ГитХаба, подготовка окружения и заливка в ytgui-env на ГитХаб) уже закончены, всё проверено и протестировано.

Проект уже спроектирован, твоего анализа по архитектуре не нужно, тебе нужно полностью написать весь код, ни чего не пропуская, если ты чего-то забудешь, то билд нового кода не получится. Ты - машина, напротив тебя - машина (ГитХаб), всё, что ты написал он должен собрать без моего участия. YML можешь ознакомиться, полагаю его менять не нужно, остальной код и разметка - твои.

На иконку приложения поставь стандартную дискетку. Добавь право на интернет и запись в Documents.

Диз расписывается в xml, код в java. Стараемся избегать kotlin. Необходимые картинки, которые нужно нарисовать самому (отсутствуют стандартные) генерировать в xml. Все строки вынести в strings.xml для поддержки потенциального перевода на другие языки (однако, прямо сейчас в коде о языках не думаем).

Точка входа MainActivity, потом DownloadActivity, и дальше в главном цикле программы юзер гуляет между экранами загрузки и главным, где консоль, возвращается в загрузку и снова в консоль.

