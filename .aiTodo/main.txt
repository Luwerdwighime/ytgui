На экране MainActivity хакерская текстовая арея на весь, свободный от кнопки экран, и снизу кнопка "Далее", которая станет активна только после успешного завершения операции, чтобы юзер переместился на DownloadActivity. Textarea поддерживает перемотку, всегда держится на нижней строке при любом изменении контента, поддерживает копирование в буффер

Код MainActivity работает в двух режимах. Если программа только запущена и параметров не передали, то пишем в нашу хакерскую консоль "Качаем yt-dlp... ~500Мб\n". Берём Jgit и качаем репу ytgui-env, получаем от него некие текста прогресса работы, пишем их в консоль. "Качаем" бывает разное: если в files отсутствует папка ytgui-env, то клонируем репу, если присутствует, то обновляем через pull (обновляем именно files/ytgui-env). Клонируем только с глубиной 1 только дефолтную ветку. Если пропала сеть, то мы не падаем, пишем извинительный тоаст и больше ничего не делаем - юзер нас сам перезапустит, когда ему нужно. Когда обновление окружения успешно завершено, светится кнопка "Далее"

Если получен параметр options, значит нас вызвал DownloadActivity. Он передал нам аналог std::string[] - это опции к yt-dlp. В этом режиме мы запускаем процесс yt-dlp (python -m) внутри скачанного ytgui-env. Нужно запустить команду и двумя потоками захватить stdout и stderr, и аккуратно последовательно без буфферизации лить строки из потоков в нашу хакерскую консоль. По завершении работы yt-dlp, кнопка "Далее" внизу экрана становится акивной, и юзер, после ознакомления с консолью, может вернуться на DownloadActivity. В случае ошибки yt-dlp мы не падаем, хватаем код возврата, последний stderr и (1) отпечатываем всё в консоли, (2) показываем тоаст с этим текстом

