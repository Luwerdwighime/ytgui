На экране MainActivity хакерская текстовая арея на весь, свободный от кнопки экран, и снизу кнопка "Далее", которая станет активна только после успешного завершения операции, чтобы юзер переместился на DownloadActivity. Textarea поддерживает перемотку, всегда держится на нижней строке при любом изменении контента, поддерживает копирование в буффер.

Все логи и события внутри проги отдельным thread-ом льются в эту Textarea, logcat не юзаем, юзаем Textarea. Проливка потоков текста в Textarea должно осуществляться без буфферизации, например, всё что пишет yt-dlp, и stdout, и stderr должно непрерывно поступать в нашу консоль по мере вытекания из yt-dlp.

== MainActivity режим запуска
Код MainActivity работает в двух режимах. Если программа только запущена и параметров не передали (null), то пишем в нашу хакерскую консоль "Качаем yt-dlp [версия]... ~127Мб\n". Линк выглядит, например, так: https://github.com/Luwerdwighime/ytgui-env/archive/refs/tags/v1.4.0.zip . Единственная, изменяющаяся часть - версия, она должна быть в коде отдельной откомментированной константой, которая будет изменяться кодером от версии к версии. Тэги ГитХаба - это "v"+версия, имя зипака с "v", внутри зипака папка ytgui-env-версия (без "v"), не путайся. Пишем "Распаковка ytgui-env...", распаковываем зипак в files, получаем папку ytgui-env-версия, переименовываем в просто ytgui-env, удаляем зипак (вообще, не оставляем за собой мусор), устанавливаем бит выполнения на ytgui-env/bin/ffmpeg и ytgui-env/bin/python3.11. Когда установка окружения успешно завершена, пишем "ytgui-env установлен!" и светится кнопка "Далее".

== MainActivity режим закачки
Если получен параметр options, значит нас вызвал DownloadActivity. Он передал нам аналог std::string[] - это опции к yt-dlp, их может быть разное количество от 0 до ~10. В этом режиме мы запускаем процесс yt-dlp (как модуль, python -m) внутри скачанного окружения ytgui-env. Нужно запустить команду и отдельным потоком захватить stdout и stderr, аккуратно последовательно без буфферизации лить строки из потока в нашу хакерскую консоль (textarea). Требуется указать переменные окружения для работы внутри ytgui-env: PREFIX=/data/data/org.nazarik.ytgui/files/ytgui-env, PATH=$PREFIX/bin:$PATH, LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH

В качестве папки назначения используются: для видео и видеоплейлистов папка Documents/ytVideo, для аудио и аудиоплейлистов Documents/ytAudio. Для плейлистов запрашивается сохранение в виде папка-альбом/файл-трек. Documents - та самая, что в общем доступе на внутренней флешке, для которой запрашивался андроид доступ. Т.е. работаем внутри окружения, а сохраняем во вне, на /storage/emulated/0/...

Имей ввиду, что указание папки - это опция, которую добавляешь в массив ты. Её DownliadActivity должен был тебе сюда в MainActivity передать в зависимости от прожатой кнопки.

По завершении работы yt-dlp, кнопка "Далее" внизу экрана становится акивной, и юзер, после ознакомления с консолью, может вернуться на DownloadActivity. В случае ошибки yt-dlp мы не падаем, хватаем код возврата, последнюю строку из stderr и (1) отпечатываем всё в консоли, (2) показываем тоаст с этим текстом (зацепим внимание юзера, чтобы копипастил ошибку из textarea в чат суппорту).

Когда мы входим в режим закачки, то зипак уже считается скачанным. Если файл ytgui-env/bin/python3.11 отсутствует, то мы пишем в консоль "Окружение [версия] повреждено. Требуется переустановка этой программы" и дальше ничего не делаем

