name: Build APK and Generate Javadoc

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: 8.10
    - name: Generate Gradle Wrapper
      run: gradle wrapper --gradle-version 8.10
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build Release APK
      run: ./gradlew clean assembleRelease

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: ytgui
        path: app/build/outputs/apk/**/**/*.apk

    # --- Новый шаг: Генерация Javadoc ---
    - name: Generate Javadoc
      run: |
        # Создаем директорию для docs, если ее нет
        mkdir -p docs
        
        # Генерируем Javadoc с помощью Gradle
        ./gradlew javadoc
        
        # Перемещаем сгенерированные файлы из app/build/docs/javadoc в /docs
        cp -R app/build/docs/javadoc/* docs/

    - name: Upload Javadoc to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: javadoc-docs
        path: docs

    # --- Новый шаг: Настройка GitHub Pages ---
    - name: Deploy Javadoc to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs # Папка, которую нужно опубликовать
        force_orphan: true # Используйте, если хотите очищать ветку gh-pages перед каждой публикацией

