package org.nazarik.ytgui;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.provider.Settings;
import android.text.method.ScrollingMovementMethod;
import android.util.Log;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.ContextCompat;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public class MainActivity extends AppCompatActivity {

  // --- –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
  private static final String ENV_NAME = "ytgui-env";
  private static final String ENV_VERSION = "1.7.0"; // –í–µ—Ä—Å–∏—è —Å–∫–∞—á–∏–≤–∞–µ–º–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  private static final String PYTHON_PATH = "bin/python3.12"; // –ü—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É Python
  private static final String FFMPEG_PATH = "bin/ffmpeg"; // –ü—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É FFmpeg
  private static final String LD_LIBRARY_PATH = "lib"; // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏
  private static final int ZIP_SIZE = 143; // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä ZIP-–∞—Ä—Ö–∏–≤–∞ –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö

  // --- –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ---
  private TextView consoleTextView;
  private Button nextButton;
  private ArrayList<String> ytDlpOptions; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ArrayList<String> –¥–ª—è –æ–ø—Ü–∏–π

  // –ü—É–ª –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
  private final ExecutorService executorService = Executors.newSingleThreadExecutor();

  // –î–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è MANAGE_EXTERNAL_STORAGE
  private ActivityResultLauncher<Intent> manageStoragePermissionLauncher;

  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ Activity.
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, ActivityResultLauncher
   * –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–ª–∏ –∑–∞–∫–∞—á–∫–∞).
   *
   * @param savedInstanceState –ï—Å–ª–∏ Activity –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ä–∞–Ω–µ–µ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è,
   * —ç—Ç–æ—Ç Bundle —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –≤ {@link #onSaveInstanceState}.
   * –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ null.
   */
  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    initializeUI();
    registerPermissionLauncher();
    handleIntentAndStartOperation();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è consoleTextView –∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç nextButton –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
   */
  private void initializeUI() {
    consoleTextView = findViewById(R.id.consoleTextView);
    consoleTextView.setMovementMethod(new ScrollingMovementMethod());
    nextButton = findViewById(R.id.nextButton);
    nextButton.setEnabled(false); // –ö–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    nextButton.setOnClickListener(v -> navigateToDownloadActivity());
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç {@link ActivityResultLauncher} –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
   * —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è MANAGE_APP_ALL_FILES_ACCESS_PERMISSION (–¥–ª—è Android 11+).
   */
  private void registerPermissionLauncher() {
    manageStoragePermissionLauncher = registerForActivityResult(
        new ActivityResultContracts.StartActivityForResult(),
        result -> handleManageStoragePermissionResult()
    );
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è MANAGE_EXTERNAL_STORAGE.
   * –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é, –∏–Ω–∞—á–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
   */
  private void handleManageStoragePermissionResult() {
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
      if (Environment.isExternalStorageManager()) {
        appendLog("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏ –ø–æ–ª—É—á–µ–Ω–æ! ‚úÖ");
        startOperation(); // startOperation –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      } else {
        appendLog("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ üò•");
        Toast.makeText(this, R.string.permission_denied_toast, Toast.LENGTH_LONG).show();
        nextButton.setEnabled(false);
      }
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç {@link Intent}, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã (–∑–∞–∫–∞—á–∫–∞ –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è).
   * –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞, –ª–∏–±–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è, –ª–∏–±–æ —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é.
   */
  private void handleIntentAndStartOperation() {
    Intent intent = getIntent();
    if (intent != null && intent.hasExtra("options")) {
      ytDlpOptions = intent.getStringArrayListExtra("options"); // –ü–æ–ª—É—á–∞–µ–º ArrayList
      // –†–µ–∂–∏–º –∑–∞–∫–∞—á–∫–∏: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      // startOperation() –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –≤ checkAndRequestPermissions() –∏–ª–∏ –≤ onRequestPermissionsResult/manageStoragePermissionLauncher
      checkAndRequestPermissions();
    } else {
      // –†–µ–∂–∏–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∑–∞–ø–∏—Å—å —Ç—É—Ç –Ω–µ –Ω—É–∂–Ω—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è)
      startOperation();
    }
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –µ—ë –≤–Ω–∏–∑.
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ.
   *
   * @param message –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å.
   */
  private void appendLog(final String message) {
    runOnUiThread(() -> {
      consoleTextView.append(message + "\n");
      // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ Layout —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Ç–µ–∫—Å—Ç –µ—Å—Ç—å
      if (consoleTextView.getLayout() != null) {
        final int scrollAmount = consoleTextView.getLayout().getLineTop(
            consoleTextView.getLineCount()) - consoleTextView.getHeight();
        if (scrollAmount > 0) {
          consoleTextView.scrollTo(0, scrollAmount);
        }
      }
    });
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ö—Ä–∞–Ω–∏–ª–∏—â—É.
   * –î–ª—è Android 11 (API 30) –∏ –≤—ã—à–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç MANAGE_EXTERNAL_STORAGE.
   * –î–ª—è Android 9 (API 28) –∏ –Ω–∏–∂–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç WRITE_EXTERNAL_STORAGE.
   */
  private void checkAndRequestPermissions() {
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
      // –î–ª—è Android 11 (API 30) –∏ –≤—ã—à–µ
      if (!Environment.isExternalStorageManager()) {
        appendLog("–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞. üìÇ");
        requestManageAllFilesAccessPermission();
      } else {
        appendLog("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏ —É–∂–µ –µ—Å—Ç—å. ‚úÖ");
        startOperation(); // startOperation –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      }
    } else {
      // –î–ª—è Android 9 (API 28) –∏ –Ω–∏–∂–µ
      if (ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)
          != PackageManager.PERMISSION_GRANTED) {
        appendLog("–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞. üìù");
        requestLegacyWritePermission();
      } else {
        appendLog("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —É–∂–µ –µ—Å—Ç—å. ‚úÖ");
        startOperation(); // startOperation –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      }
    }
  }

  /**
   * –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
   *
   * @param file –§–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
   */
  private void deleteRecursive(File file) {
    if (!file.exists()) {
      return;
    }
    if (file.isDirectory()) {
      File[] children = file.listFiles();
      if (children != null) {
        for (File child : children) {
          deleteRecursive(child);
        }
      }
    }
    if (!file.delete()) {
      Log.w("MainActivity", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª/–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: " + file.getAbsolutePath());
    }
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è yt-dlp –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ.
   * –í–∫–ª—é—á–∞–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ ZIP-–∞—Ä—Ö–∏–≤–∞, –µ–≥–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
   * –∏ —É—Å—Ç–∞–Ω–æ–≤–∫—É –±–∏—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤.
   */
  private void downloadAndSetupEnvironment() {
    executorService.execute(() -> {
      try {
        File filesDir = getFilesDir();
        File envDir = new File(filesDir, ENV_NAME);
        File pythonExecutable = new File(envDir, PYTHON_PATH);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
        if (isEnvironmentAlreadySetup(pythonExecutable)) {
          appendLog(getString(R.string.environment_already_installed, ENV_VERSION));
          runOnUiThread(() -> nextButton.setEnabled(true));
          return;
        }

        File zipFile = new File(filesDir, "v" + ENV_VERSION + ".zip");
        String downloadUrl = "https://github.com/Luwerdwighime/ytgui-env/archive/refs/tags/v"
            + ENV_VERSION + ".zip";

        downloadZipFile(downloadUrl, zipFile);
        unzipEnvironment(zipFile, filesDir, envDir);
        setExecutablePermissions(envDir);

        appendLog(getString(R.string.environment_setup_complete));
        runOnUiThread(() -> nextButton.setEnabled(true));

      } catch (Exception e) {
        handleEnvironmentSetupError(e);
      }
    });
  }

  /**
   * –°–∫–∞—á–∏–≤–∞–µ—Ç ZIP-—Ñ–∞–π–ª –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL –≤ —Ü–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª.
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ —Å–æ–æ–±—â–∞–µ—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
   *
   * @param downloadUrl URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
   * @param zipFile     –¶–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ZIP-–∞—Ä—Ö–∏–≤–∞.
   * @throws IOException –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã.
   */
  private void downloadZipFile(String downloadUrl, File zipFile) throws IOException {
    appendLog(getString(R.string.environment_download_start, ENV_VERSION, ZIP_SIZE));
    URL url = new URL(downloadUrl);
    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    connection.connect();

    if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
      throw new IOException("HTTP error code: " + connection.getResponseCode());
    }

    int totalFileSize = connection.getContentLength();
    if (totalFileSize <= 0) {
      totalFileSize = ZIP_SIZE * 1024 * 1024; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    }

    try (InputStream input = new BufferedInputStream(connection.getInputStream());
        OutputStream output = new FileOutputStream(zipFile)) {
      byte data[] = new byte[4096];
      long total = 0;
      int count;
      int lastProgress = 0;

      while ((count = input.read(data)) != -1) {
        total += count;
        output.write(data, 0, count);

        if (totalFileSize > 0) {
          int progress = (int) (total * 100 / totalFileSize);
          if (progress / 20 > lastProgress / 20 || (total >= totalFileSize && totalFileSize > 0) || progress == 100) {
            appendLog(getString(R.string.environment_download_progress, progress));
            lastProgress = progress;
          }
        }
      }
    } finally {
      connection.disconnect();
    }
    appendLog("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. ‚úÖ");
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É yt-dlp –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ, –∏—Å–ø–æ–ª—å–∑—É—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ.
   * –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—ã–≤–æ–¥ stdout –∏ stderr, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–¥ –≤—ã—Ö–æ–¥–∞.
   * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.
   */
  private void executeYtDlp() {
    executorService.execute(() -> {
      File filesDir = getFilesDir();
      File envDir = new File(filesDir, ENV_NAME);
      File pythonExecutable = new File(envDir, PYTHON_PATH);
      File ffmpegExecutable = new File(envDir, FFMPEG_PATH);

      if (!isPythonEnvironmentValid(pythonExecutable)) {
        handleCorruptedEnvironment();
        return;
      }

      warnIfFfmpegNotFound(ffmpegExecutable);

      ProcessBuilder processBuilder = createYtDlpProcessBuilder(envDir, pythonExecutable);
      List<String> command = buildYtDlpCommand(pythonExecutable);

      Log.d("MainActivity", "Executing command: " + String.join(" ", command));
      appendLog("–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã: " + String.join(" ", command) + "\n");

      StringBuilder errorOutput = new StringBuilder();
      try {
        Process process = processBuilder.command(command).start();
        startStreamReaders(process, errorOutput);
        int exitCode = process.waitFor();
        handleYtDlpExitCode(exitCode, errorOutput);
      } catch (IOException | InterruptedException e) {
        handleYtDlpExecutionError(e);
      } finally {
        runOnUiThread(() -> nextButton.setEnabled(true));
      }
    });
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç {@link ProcessBuilder} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã yt-dlp.
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
   *
   * @param envDir           –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è (ytgui-env).
   * @param pythonExecutable –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª Python.
   * @return –°–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π {@link ProcessBuilder}.
   */
  private ProcessBuilder createYtDlpProcessBuilder(File envDir, File pythonExecutable) {
    ProcessBuilder processBuilder = new ProcessBuilder();
    processBuilder.directory(envDir); // –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ - ytgui-env

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    processBuilder.environment().put("PREFIX", envDir.getAbsolutePath());
    processBuilder.environment().put("PATH", envDir.getAbsolutePath() + "/bin:" + System.getenv("PATH"));
    processBuilder.environment().put("LD_LIBRARY_PATH",
        new File(envDir, LD_LIBRARY_PATH).getAbsolutePath() + ":" + System.getenv("LD_LIBRARY_PATH"));
    return processBuilder;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ yt-dlp.
   *
   * @param pythonExecutable –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª Python.
   * @return –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã.
   */
  private List<String> buildYtDlpCommand(File pythonExecutable) {
    List<String> command = new ArrayList<>();
    command.add(pythonExecutable.getAbsolutePath());
    command.add("-m");
    command.add("yt_dlp");

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
    if (ytDlpOptions != null) {
      command.addAll(ytDlpOptions);
    }
    return command;
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Ç–æ–∫–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è stdout –∏ stderr –ø—Ä–æ—Ü–µ—Å—Å–∞.
   *
   * @param process     –ó–∞–ø—É—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å yt-dlp.
   * @param errorOutput {@link StringBuilder} –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –≤—ã–≤–æ–¥–∞ stderr.
   */
  private void startStreamReaders(Process process, StringBuilder errorOutput) {
    // –ü–æ—Ç–æ–∫ –¥–ª—è stdout
    Thread stdoutReader = new Thread(() -> {
      try (InputStream inputStream = process.getInputStream();
          BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))) {
        String line;
        while ((line = reader.readLine()) != null) {
          appendLog(line);
        }
      } catch (IOException e) {
        Log.e("MainActivity", "Error reading stdout: " + e.getMessage(), e);
      }
    });

    // –ü–æ—Ç–æ–∫ –¥–ª—è stderr
    Thread stderrReader = new Thread(() -> {
      try (InputStream errorStream = process.getErrorStream();
          BufferedReader reader = new BufferedReader(new InputStreamReader(errorStream))) {
        String line;
        while ((line = reader.readLine()) != null) {
          appendLog(line);
          errorOutput.append(line).append("\n"); // –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –¥–ª—è Toast
        }
      } catch (IOException e) {
        Log.e("MainActivity", "Error reading stderr: " + e.getMessage(), e);
      }
    });

    stdoutReader.start();
    stderrReader.start();

    try {
      stdoutReader.join();
      stderrReader.join();
    } catch (InterruptedException e) {
      Log.e("MainActivity", "Stream readers interrupted: " + e.getMessage(), e);
      Thread.currentThread().interrupt(); // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–¥ –≤—ã—Ö–æ–¥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ yt-dlp.
   * –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ñ–∞–π–ª—ã, –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
   *
   * @param exitCode    –ö–æ–¥ –≤—ã—Ö–æ–¥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞.
   * @param errorOutput –í—ã–≤–æ–¥ stderr –ø—Ä–æ—Ü–µ—Å—Å–∞.
   */
  private void handleYtDlpExitCode(int exitCode, StringBuilder errorOutput) {
    if (exitCode == 0) {
      appendLog("\nyt-dlp –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ! ‚úÖ");
      Toast.makeText(this, R.string.download_complete_toast, Toast.LENGTH_LONG).show();
      // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
      moveDownloadedFiles();
    } else {
      String lastErrorLine = errorOutput.length() > 0 ? errorOutput.toString().trim()
          .split("\n")[errorOutput.toString().trim().split("\n").length - 1] : "";
      String errorMessage = String.format(getString(R.string.error_executing_yt_dlp),
          "–ö–æ–¥ –≤—ã—Ö–æ–¥–∞ " + exitCode + " (" + lastErrorLine + ")");
      appendLog("\n" + errorMessage);
      Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã yt-dlp.
   *
   * @param e –ò—Å–∫–ª—é—á–µ–Ω–∏–µ.
   */
  private void handleYtDlpExecutionError(Exception e) {
    String errorMessage = String.format(getString(R.string.error_executing_yt_dlp), e.getMessage());
    appendLog("\n" + errorMessage);
    Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();
    Log.e("MainActivity", "Error executing yt-dlp", e);
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
   *
   * @param e –ò—Å–∫–ª—é—á–µ–Ω–∏–µ.
   */
  private void handleEnvironmentSetupError(Exception e) {
    Log.e("MainActivity", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: " + e.getMessage(), e);
    appendLog(getString(R.string.environment_setup_error, e.getMessage()) + " üò≠");
    runOnUiThread(() -> nextButton.setEnabled(false));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ yt-dlp –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª Python –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º.
   *
   * @param pythonExecutable –§–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ Python.
   * @return true, –µ—Å–ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
   */
  private boolean isEnvironmentAlreadySetup(File pythonExecutable) {
    return pythonExecutable.exists() && pythonExecutable.isFile() && pythonExecutable.canExecute();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ –ª–∏ Python-–æ–∫—Ä—É–∂–µ–Ω–∏–µ (—Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º –∏ –∏—Å–ø–æ–ª–Ω—è–µ–º).
   *
   * @param pythonExecutable –§–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ Python.
   * @return true, –µ—Å–ª–∏ Python-–æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
   */
  private boolean isPythonEnvironmentValid(File pythonExecutable) {
    if (!pythonExecutable.exists() || !pythonExecutable.isFile() || !pythonExecutable.canExecute()) {
      appendLog(getString(R.string.environment_corrupted, ENV_VERSION));
      runOnUiThread(() -> Toast.makeText(this, R.string.environment_corrupted_toast, Toast.LENGTH_LONG).show());
      return false;
    }
    return true;
  }

  /**
   * –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ (files/ytvideo –∏ files/ytaudio)
   * –≤ Documents/ytVideo –∏ Documents/ytAudio —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Scoped Storage.
   */
  private void moveDownloadedFiles() {
    executorService.execute(() -> {
      File filesDir = getFilesDir();

      // –¶–µ–ª–µ–≤—ã–µ –ø–∞–ø–∫–∏ –≤ Documents
      File documentsVideoDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS), "ytVideo");
      File documentsAudioDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS), "ytAudio");

      // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏, –æ—Ç–∫—É–¥–∞ —Å–∫–∞—á–∏–≤–∞–ª yt-dlp
      File tempVideoDir = new File(filesDir, "ytvideo");
      File tempAudioDir = new File(filesDir, "ytaudio");

      try {
        ensureDestinationDirectoriesExist(documentsVideoDir, documentsAudioDir);
        moveContentFromTempDir(tempVideoDir, documentsVideoDir, "–≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤", "–≤–∏–¥–µ–æ—Ñ–∞–π–ª/–ø–∞–ø–∫–∞");
        moveContentFromTempDir(tempAudioDir, documentsAudioDir, "–∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤", "–∞—É–¥–∏–æ—Ñ–∞–π–ª/–ø–∞–ø–∫–∞");
        appendLog("–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! ü•≥");
      } catch (IOException e) {
        appendLog("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: " + e.getMessage() + " üò≠");
        Log.e("MainActivity", "Error moving downloaded files: " + e.getMessage(), e);
      }
    });
  }

  /**
   * –£–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ —Ü–µ–ª–µ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∏ —Å–æ–∑–¥–∞–µ—Ç –∏—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
   *
   * @param videoDir –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –≤–∏–¥–µ–æ.
   * @param audioDir –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∞—É–¥–∏–æ.
   * @throws IOException –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
   */
  private void ensureDestinationDirectoriesExist(File videoDir, File audioDir) throws IOException {
    if (!videoDir.exists()) {
      if (!videoDir.mkdirs()) {
        throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: " + videoDir.getAbsolutePath());
      }
    }
    if (!audioDir.exists()) {
      if (!audioDir.mkdirs()) {
        throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: " + audioDir.getAbsolutePath());
      }
    }
  }

  /**
   * –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ —Ü–µ–ª–µ–≤—É—é.
   *
   * @param tempDir        –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
   * @param destinationDir –¶–µ–ª–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
   * @param contentType    –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤").
   * @param fileType       –¢–∏–ø —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–≤–∏–¥–µ–æ—Ñ–∞–π–ª/–ø–∞–ø–∫–∞").
   * @throws IOException –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤.
   */
  private void moveContentFromTempDir(File tempDir, File destinationDir, String contentType, String fileType) throws IOException {
    if (tempDir.exists() && tempDir.isDirectory()) {
      appendLog("–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ " + contentType + " –∏–∑ " + tempDir.getName() + " –≤ " + destinationDir.getAbsolutePath() + "...");
      File[] filesToMove = tempDir.listFiles();
      if (filesToMove != null) {
        for (File file : filesToMove) {
          moveFileOrDirectory(file, new File(destinationDir, file.getName()));
          appendLog("–ü–µ—Ä–µ–º–µ—â–µ–Ω " + fileType + ": " + file.getName() + " ‚úÖ");
        }
      }
      deleteRecursive(tempDir); // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
      appendLog("–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è " + contentType + " –æ—á–∏—â–µ–Ω–∞. ‚úÖ");
    } else {
      appendLog("–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è " + contentType + " –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞: " + tempDir.getAbsolutePath());
    }
  }

  /**
   * –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ñ–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏–∑ –æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –¥—Ä—É–≥–æ–µ.
   * –ï—Å–ª–∏ {@code renameTo} –Ω–µ —É–¥–∞–µ—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö),
   * –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.
   *
   * @param source      –ò—Å—Ç–æ—á–Ω–∏–∫.
   * @param destination –¶–µ–ª—å.
   * @throws IOException –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞.
   */
  private void moveFileOrDirectory(File source, File destination) throws IOException {
    if (!source.exists()) {
      return; // –ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    }

    if (source.isDirectory()) {
      if (!destination.exists()) {
        if (!destination.mkdirs()) {
          throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: " + destination.getAbsolutePath());
        }
      }
      String[] children = source.list();
      if (children == null) { // –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤
        Log.w("MainActivity", "–ü—É—Å—Ç–∞—è –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞—è –∏—Å—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: " + source.getAbsolutePath());
        return;
      }
      for (String child : children) {
        moveFileOrDirectory(new File(source, child), new File(destination, child));
      }
    } else {
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª
      if (!source.renameTo(destination)) {
        copyFile(source, destination); // –ö–æ–ø–∏—Ä—É–µ–º, –µ—Å–ª–∏ renameTo –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
        if (!source.delete()) {
          Log.w("MainActivity", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: " + source.getAbsolutePath());
        }
      }
    }
  }

  /**
   * –ö–æ–ø–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –¥—Ä—É–≥–æ–π.
   *
   * @param sourceFile      –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª.
   * @param destinationFile –¶–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª.
   * @throws IOException –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞.
   */
  private void copyFile(File sourceFile, File destinationFile) throws IOException {
    try (InputStream in = new FileInputStream(sourceFile);
        OutputStream out = new FileOutputStream(destinationFile)) {
      byte[] buffer = new byte[4096];
      int length;
      while ((length = in.read(buffer)) != -1) {
        out.write(buffer, 0, length);
      }
    }
  }


  /**
   * –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ DownloadActivity –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ç–µ–∫—É—â—É—é Activity.
   */
  private void navigateToDownloadActivity() {
    Intent nextIntent = new Intent(this, DownloadActivity.class);
    startActivity(nextIntent);
    finish(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º MainActivity, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —á–µ—Ä–µ–∑ {@code onRequestPermissionsResult}.
   *
   * @param requestCode  –ö–æ–¥ –∑–∞–ø—Ä–æ—Å–∞, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ {@code requestPermissions}.
   * @param permissions  –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.
   * @param grantResults –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.
   */
  @Override
  public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
      @NonNull int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if (requestCode == 1001) {
      if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        appendLog("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—É—á–µ–Ω–æ! ‚úÖ");
        startOperation(); // startOperation –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      } else {
        appendLog("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ üò•");
        Toast.makeText(this, R.string.permission_denied_toast, Toast.LENGTH_LONG).show();
        nextButton.setEnabled(false);
      }
    }
  }

  /**
   * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ MANAGE_APP_ALL_FILES_ACCESS_PERMISSION –¥–ª—è Android 11 (API 30) –∏ –≤—ã—à–µ.
   */
  private void requestManageAllFilesAccessPermission() {
    Intent intent = new Intent(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);
    Uri uri = Uri.fromParts("package", getPackageName(), null);
    intent.setData(uri);
    manageStoragePermissionLauncher.launch(intent);
  }

  /**
   * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ WRITE_EXTERNAL_STORAGE –¥–ª—è Android 9 (API 28) –∏ –Ω–∏–∂–µ.
   */
  private void requestLegacyWritePermission() {
    requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1001);
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–∏—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ Python –∏ FFmpeg.
   *
   * @param envDir –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è.
   * @throws IOException –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.
   */
  private void setExecutablePermissions(File envDir) throws IOException {
    File pythonExecutable = new File(envDir, PYTHON_PATH);
    File ffmpegExecutable = new File(envDir, FFMPEG_PATH);

    if (pythonExecutable.exists() && pythonExecutable.isFile()) {
      if (!pythonExecutable.setExecutable(true, false)) {
        throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è Python.");
      }
    } else {
      throw new IOException("–§–∞–π–ª Python –Ω–µ –Ω–∞–π–¥–µ–Ω: " + pythonExecutable.getAbsolutePath());
    }

    if (ffmpegExecutable.exists() && ffmpegExecutable.isFile()) {
      if (!ffmpegExecutable.setExecutable(true, false)) {
        throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è FFmpeg.");
      }
    } else {
      appendLog(getString(R.string.ffmpeg_not_found_warning, ffmpegExecutable.getAbsolutePath()));
    }
    appendLog("–ë–∏—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. ‚úÖ");
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é MainActivity –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞.
   * –õ–∏–±–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–∫–∞—á–∫—É, –ª–∏–±–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ.
   */
  private void startOperation() {
    if (ytDlpOptions != null) {
      // –†–µ–∂–∏–º –∑–∞–∫–∞—á–∫–∏
      appendLog("–ó–∞–ø—É—Å–∫ yt-dlp... üöÄ");
      executeYtDlp();
    } else {
      // –†–µ–∂–∏–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      downloadAndSetupEnvironment();
    }
  }

  /**
   * –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç ZIP-–∞—Ä—Ö–∏–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–Ω—É—é –ø–∞–ø–∫—É.
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ —Å–æ–æ–±—â–∞–µ—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏.
   *
   * @param zipFile   –ê—Ä—Ö–∏–≤–Ω—ã–π —Ñ–∞–π–ª.
   * @param filesDir  –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
   * @param envDir    –¶–µ–ª–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è.
   * @throws IOException –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞.
   */
  private void unzipEnvironment(File zipFile, File filesDir, File envDir) throws IOException {
    appendLog(getString(R.string.environment_unzip_start));
    unzip(zipFile, filesDir); // –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º ZIP

    // –ü–æ—Å–ª–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ ZIP-—Ñ–∞–π–ª –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É ytgui-env-1.7.0/
    File extractedDir = new File(filesDir, ENV_NAME + "-" + ENV_VERSION);

    if (extractedDir.exists()) {
      if (envDir.exists()) {
        deleteRecursive(envDir); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      }
      if (!extractedDir.renameTo(envDir)) {
        throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø–∞–ø–∫—É " + extractedDir.getAbsolutePath()
            + " –≤ " + envDir.getAbsolutePath());
      }
      appendLog("–ü–∞–ø–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞. ‚úÖ");
    } else {
      throw new IOException("–†–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: " + extractedDir.getAbsolutePath());
    }

    if (!zipFile.delete()) {
      Log.w("MainActivity", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å ZIP-—Ñ–∞–π–ª: " + zipFile.getAbsolutePath());
    }
    appendLog("–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã. ‚úÖ");
    appendLog("–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. ‚úÖ");
  }

  /**
   * –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç ZIP-–∞—Ä—Ö–∏–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ —Å–æ–æ–±—â–∞–µ—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏.
   *
   * @param zipFile   –ê—Ä—Ö–∏–≤–Ω—ã–π —Ñ–∞–π–ª.
   * @param targetDir –¶–µ–ª–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
   * @throws IOException –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞.
   */
  private void unzip(File zipFile, File targetDir) throws IOException {
    try (ZipFile zip = new ZipFile(zipFile)) {
      Enumeration<? extends ZipEntry> entries = zip.entries();
      long totalBytes = 0;
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ—Å—á–∏—Ç–∞–µ–º –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
      List<ZipEntry> entryList = new ArrayList<>(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å–∏, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏—Å—å –¥–≤–∞–∂–¥—ã
      while (entries.hasMoreElements()) {
        ZipEntry entry = entries.nextElement();
        entryList.add(entry);
        if (!entry.isDirectory()) {
          totalBytes += entry.getSize();
        }
      }

      long extractedBytes = 0;
      int lastProgress = 0;

      for (ZipEntry entry : entryList) {
        File entryFile = new File(targetDir, entry.getName());

        if (entry.isDirectory()) {
          if (!entryFile.isDirectory() && !entryFile.mkdirs()) {
            throw new IOException("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: " + entryFile.getAbsolutePath());
          }
        } else {
          // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
          File parent = entryFile.getParentFile();
          if (parent != null && !parent.isDirectory() && !parent.mkdirs()) {
            throw new IOException(
                "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ñ–∞–π–ª–∞: " + entryFile.getAbsolutePath());
          }

          try (InputStream is = zip.getInputStream(entry); // –ü–æ–ª—É—á–∞–µ–º InputStream –∏–∑ ZipFile
              FileOutputStream fos = new FileOutputStream(entryFile)) {
            byte[] buffer = new byte[4096];
            int bytesRead;
            while ((bytesRead = is.read(buffer)) != -1) {
              fos.write(buffer, 0, bytesRead);
              extractedBytes += bytesRead;

              if (totalBytes > 0) {
                int currentProgress = (int) (extractedBytes * 100 / totalBytes);
                if (currentProgress / 20 > lastProgress / 20 || (extractedBytes == totalBytes && totalBytes > 0)) {
                  appendLog(getString(R.string.environment_unzip_progress, currentProgress));
                  lastProgress = currentProgress;
                }
              }
            }
          }
        }
      }
    }
  }

  /**
   * –í—ã–≤–æ–¥–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å, –µ—Å–ª–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω.
   *
   * @param ffmpegExecutable –§–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ FFmpeg.
   */
  private void warnIfFfmpegNotFound(File ffmpegExecutable) {
    if (!ffmpegExecutable.exists() || !ffmpegExecutable.isFile()) {
      appendLog(getString(R.string.ffmpeg_not_found_warning, ffmpegExecutable.getAbsolutePath()));
    }
  }

  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ Activity –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.
   * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å–µ —Ñ–æ–Ω–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏.
   */
  @Override
  protected void onDestroy() {
    super.onDestroy();
    executorService.shutdownNow(); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Ç–æ–∫–∏ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ Activity
  }
}


